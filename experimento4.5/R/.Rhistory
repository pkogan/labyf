library(skimr)
#Cargar librería
library(dplyr)
library(skimr)
library(data.table)
data_mesa1 <- read.csv("padron600.csv", sep=",",header = FALSE)
colnames(data_mesa1) <- paste("P" , (1:27) , sep="-")
row.names(data_mesa1) <- paste("L" , (1:27) , sep="-")
data_mesa1t<-transpose(data_mesa1)
colnames(data_mesa1t) <- row.names(data_mesa1)
row.names(data_mesa1t) <- colnames(data_mesa1)
#Crear mapa de calor
heatmap(as.matrix(data_mesa1t[, -1]))
summary(data_mesa1t)
skim(data_mesa1t)
boxplot(data_mesa1t)
View(data_mesa1)
View(data_mesa1t)
#data_mesa1 <- read.csv("padron600.csv", sep=",",header = FALSE)
data_mesa1 <- read.csv("cco1mesa360x20listasMatriz.csv", sep=",",header = FALSE)
listas=20
colnames(data_mesa1) <- paste("P" , (1:listas) , sep="-")
row.names(data_mesa1) <- paste("L" , (1:listas) , sep="-")
data_mesa1t<-transpose(data_mesa1)
colnames(data_mesa1t) <- row.names(data_mesa1)
row.names(data_mesa1t) <- colnames(data_mesa1)
#Crear mapa de calor
heatmap(as.matrix(data_mesa1t[, -1]))
summary(data_mesa1t)
skim(data_mesa1t)
View(data_mesa1)
boxplot(data_mesa1t)
data_mesa_corridas <- read.csv("cco1mesa360x20listasCorridas.csv", sep=",",header = FALSE)
View(data_mesa_corridas)
colnames(data_mesa_corridas) <- paste("P" , (1:listas) , sep="-")
View(data_mesa1t)
View(data_mesa_corridas)
boxplot(data_mesa_corridas)
library(MASS)
contour(data_mesa_corridas, drawlabels = FALSE, nlevels = 6,
col = rev(heat.colors(6)), add = TRUE, lwd = 3)
plot(data_mesa_corridas)
boxplot(data_mesa_corridas.P-1)
boxplot(data_mesa_corridas.{P-1})
View(data_mesa_corridas)
boxplot(data_mesa_corridas)
plot(data_mesa_corridas, aes(fill="P-1",y=value,x=variable))
ggplot(data_mesa_corridas, aes(fill="P-1",y=value,x=variable))
library(ggplot)
plot(data_mesa_corridas["P-1"])
#Cargar librería
install.packages("rmarkdown")
library(rmarkdown)
`` `{r}
`` `
if (requireNamespace("thematic"))
thematic::thematic_rmd(font = "auto")
---
title: "Theming with bslib and thematic"
```{r setup, include=FALSE}
if (requireNamespace("thematic"))
thematic::thematic_rmd(font = "auto")
if (requireNamespace("thematic"))
thematic::thematic_rmd(font = "auto")
if (requireNamespace("thematic"))
thematic::thematic_rmd(font = "auto")
if (requireNamespace("thematic"))
thematic::thematic_rmd(font = "auto")
if (requireNamespace("thematic"))
thematic::thematic_rmd(font = "auto")
library(ggplot2)
ggplot(mpg, aes(displ, hwy)) +
geom_point() + geom_smooth()
lattice::show.settings()
plot(pressure, col = thematic::thematic_get_option("accent"))
```{#Cargar librería}
```{#Cargar librería}
library(dplyr)
library(skimr)
library(data.table)
#data_mesa1 <- read.csv("padron600.csv", sep=",",header = FALSE)
data_mesa1 <- read.csv("cco1mesa360x20listasMatriz.csv", sep=",",header = FALSE)
listas=20
colnames(data_mesa1) <- paste("P" , (1:listas) , sep="-")
row.names(data_mesa1) <- paste("L" , (1:listas) , sep="-")
data_mesa1t<-transpose(data_mesa1)
colnames(data_mesa1t) <- row.names(data_mesa1)
row.names(data_mesa1t) <- colnames(data_mesa1)
#Crear mapa de calor
heatmap(as.matrix(data_mesa1t[, -1]))
data_mesa_corridas <- read.csv("cco1mesa360x20listasCorridas.csv", sep=",",header = FALSE)
colnames(data_mesa_corridas) <- paste("P" , (1:listas) , sep="-")
boxplot(data_mesa_corridas)
#data_mesa1 <- read.csv("padron600.csv", sep=",",header = FALSE)
data_mesa1 <- read.csv("cco1mesa360x20listasMatriz.csv", sep=",",header = FALSE)
listas=20
colnames(data_mesa1) <- paste("P" , (1:listas) , sep="-")
row.names(data_mesa1) <- paste("L" , (1:listas) , sep="-")
data_mesa1t<-transpose(data_mesa1)
library(dplyr)
library(skimr)
library(data.table)
library(dplyr)
library(skimr)
library(data.table)
#data_mesa1 <- read.csv("padron600.csv", sep=",",header = FALSE)
data_mesa1 <- read.csv("cco1mesa360x20listasMatriz.csv", sep=",",header = FALSE)
listas=20
colnames(data_mesa1) <- paste("P" , (1:listas) , sep="-")
row.names(data_mesa1) <- paste("L" , (1:listas) , sep="-")
data_mesa1t<-transpose(data_mesa1)
colnames(data_mesa1t) <- row.names(data_mesa1)
row.names(data_mesa1t) <- colnames(data_mesa1)
#Crear mapa de calor
heatmap(as.matrix(data_mesa1t[, -1]))
